[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bitfinex-maker-kit"
version = "1.1.0"
description = "Professional market making toolkit for Bitfinex cryptocurrency exchange"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Bitfinex Maker-Kit Contributors"}]
keywords = ["bitfinex", "cryptocurrency", "trading", "market-making", "automated-trading"]
requires-python = ">=3.12"
dependencies = [
    "bitfinex-api-py>=3.0.0",
    "python-dotenv>=1.0.0",
    "asyncio>=3.4.3",
    "aiohttp>=3.8.0",
    "click>=8.0.0"
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",      # All-in-one linter and formatter
    "mypy>=1.5.0",      # Type checking
    "pytest>=7.4.0",    # Testing framework
    "pytest-cov>=4.1.0", # Coverage reporting
    "bandit>=1.7.5"     # Security scanning
]

[project.scripts]
maker-kit = "maker_kit.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["maker_kit*"]
exclude = ["tests*"]

# Ruff - All-in-one linter and formatter (replaces black, isort, flake8, pyupgrade)
[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E", "W",    # pycodestyle
    "F",         # pyflakes  
    "I",         # isort
    "B",         # flake8-bugbear
    "C4",        # flake8-comprehensions
    "UP",        # pyupgrade
    "SIM",       # flake8-simplify
    "RUF"        # Ruff-specific rules
]
ignore = [
    "E501",      # line too long (handled by formatter)
    "T201"       # Allow print statements (CLI tool)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# MyPy - Type checking
[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["bitfinex.*"]
ignore_missing_imports = true

# Coverage - Test coverage reporting
[tool.coverage.run]
source = ["maker_kit"]
omit = ["*/tests/*", "*/__init__.py"]
branch = true

[tool.coverage.report]
fail_under = 80
show_missing = true
skip_empty = true

# Pytest - Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=maker_kit",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "--tb=short"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests"
]